name: Custom Release
run-name: Production Release Drafter
on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # we need full history to generate changelog

      - name: Get last tag
        id: lasttag
        run: |
          git fetch --tags
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Bump minor version
        id: bump
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${{ steps.lasttag.outputs.tag }}"
          NEW_TAG="$MAJOR.$((MINOR+1)).0"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          PREV_TAG="${{ steps.lasttag.outputs.tag }}"
          NEW_TAG="${{ steps.bump.outputs.new_tag }}"
          if [ "$PREV_TAG" = "0.0.0" ]; then
            LOG=$(git log --pretty=format:"- %s (%an)")
          else
            LOG=$(git log $PREV_TAG..HEAD --pretty=format:"- %s (%an)")
          fi
          echo "log<<EOF" >> $GITHUB_OUTPUT
          echo "$LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create draft release
        id: release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          name: "ðŸš€ Release ${{ steps.bump.outputs.new_tag }}"
          body: |
            ## Release Notes
            <!-- add any release notes here -->

            ## ðŸ”¥ What's Changed
            ${{ steps.changelog.outputs.log }}

            ---
            
            ## ðŸ“‹ Full Changelog
            ðŸ”— **[View all changes â†’](https://github.com/${{ github.repository }}/compare/${{ steps.lasttag.outputs.tag }}...${{ steps.bump.outputs.new_tag }})**
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Send Draft Release URL to Slack
        id: slack_release
        run: |
          response=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
            -H 'Content-type: application/json' \
            --data "{
              \"channel\": \"${{ vars.SLACK_CHANNEL }}\",
              \"text\": \":package: New release draft is created - *${{ steps.bump.outputs.new_tag }}* \",
              \"blocks\": [
                {
                  \"type\": \"section\",
                  \"text\": {\"type\": \"mrkdwn\", \"text\": \":package: New release draft is created - *${{ steps.bump.outputs.new_tag }}*\"}
                },
                {
                  \"type\": \"section\",
                  \"accessory\": {
                    \"type\": \"button\",
                    \"text\": {\"type\": \"plain_text\", \"text\": \"View Release\", \"emoji\": true},
                    \"url\": \"${{ steps.release.outputs.url }}\",
                    \"style\": \"primary\"
                  },
                  \"fields\": [
                    {\"type\": \"mrkdwn\", \"text\": \"*Release Version:*\\n${{ steps.bump.outputs.new_tag }}\"},
                    {\"type\": \"mrkdwn\", \"text\": \"*Repository:*\\n${{ github.repository }}\"}
                  ]
                }
              ]
            }" https://slack.com/api/chat.postMessage)

          echo "slack_ts=$(echo $response | jq -r '.ts')" >> $GITHUB_OUTPUT
          echo "slack_channel=$(echo $response | jq -r '.channel')" >> $GITHUB_OUTPUT

      - name: Send follow-up thread message
        if: always()   # you can adjust condition to only send after deploy
        run: |
          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
            -H 'Content-type: application/json' \
            --data "{
              \"channel\": \"${{ steps.slack_release.outputs.slack_channel }}\",
              \"text\": \":white_check_mark: Deployment finished successfully!\",
              \"thread_ts\": \"${{ steps.slack_release.outputs.slack_ts }}\"
            }" https://slack.com/api/chat.postMessage
